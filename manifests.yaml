apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"auth-service"},"name":"auth-service","namespace":"microservicios-web-imagenes"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"auth-service"}},"template":{"metadata":{"labels":{"app":"auth-service"}},"spec":{"containers":[{"env":[{"name":"SA_PASSWORD","valueFrom":{"secretKeyRef":{"key":"SA_PASSWORD","name":"auth-service-secret"}}},{"name":"ConnectionStrings__AuthDb","value":"Server=sqlserver:1433; Database=AuthServiceBD; User Id=sa; Password=$(SA_PASSWORD); TrustServerCertificate=True; Encrypt=False"}],"image":"auth-service:latest","imagePullPolicy":"Never","livenessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":15,"periodSeconds":20},"name":"auth-service","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":5,"periodSeconds":10},"resources":{"limits":{"cpu":"300m","memory":"256Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}}]}}}}
    creationTimestamp: "2025-07-03T02:44:28Z"
    generation: 6
    labels:
      app: auth-service
    name: auth-service
    namespace: microservicios-web-imagenes
    resourceVersion: "9470"
    uid: 31058eb3-ea2b-4087-b287-bcf0f0b83efe
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: auth-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-07-03T00:57:53-03:00"
        creationTimestamp: null
        labels:
          app: auth-service
      spec:
        containers:
        - env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                key: SA_PASSWORD
                name: auth-service-secret
          - name: ConnectionStrings__AuthDb
            value: Server=sqlserver:1433; Database=AuthServiceBD; User Id=sa; Password=$(SA_PASSWORD);
              TrustServerCertificate=True; Encrypt=False
          image: auth-service:dev
          imagePullPolicy: Never
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: auth-service
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-07-03T02:44:28Z"
      lastUpdateTime: "2025-07-03T02:44:28Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-07-03T04:08:23Z"
      lastUpdateTime: "2025-07-03T04:08:23Z"
      message: ReplicaSet "auth-service-768b8dd7f7" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 6
    replicas: 3
    unavailableReplicas: 3
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"imagen-service"},"name":"imagen-service","namespace":"microservicios-web-imagenes"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"imagen-service"}},"template":{"metadata":{"labels":{"app":"imagen-service"}},"spec":{"containers":[{"env":[{"name":"SA_PASSWORD","valueFrom":{"secretKeyRef":{"key":"SA_PASSWORD","name":"imagen-service-secret"}}},{"name":"ConnectionStrings__DefaultConnection","value":"Server=sqlserver:1433; Database=DigitalizacionImagenesBD; User Id=sa; Password=$(SA_PASSWORD); TrustServerCertificate=True; Encrypt=False"}],"image":"imagen-service:latest","imagePullPolicy":"Never","livenessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":15,"periodSeconds":20},"name":"imagen-service","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":5,"periodSeconds":10},"resources":{"limits":{"cpu":"300m","memory":"256Mi"},"requests":{"cpu":"100m","memory":"128Mi"}}}]}}}}
    creationTimestamp: "2025-07-03T02:44:28Z"
    generation: 6
    labels:
      app: imagen-service
    name: imagen-service
    namespace: microservicios-web-imagenes
    resourceVersion: "9484"
    uid: 44668672-90d0-4430-a8df-f8ab992aa96e
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: imagen-service
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-07-03T00:58:04-03:00"
        creationTimestamp: null
        labels:
          app: imagen-service
      spec:
        containers:
        - env:
          - name: SA_PASSWORD
            valueFrom:
              secretKeyRef:
                key: SA_PASSWORD
                name: imagen-service-secret
          - name: ConnectionStrings__DefaultConnection
            value: Server=sqlserver:1433; Database=DigitalizacionImagenesBD; User
              Id=sa; Password=$(SA_PASSWORD); TrustServerCertificate=True; Encrypt=False
          image: imagen-service:dev
          imagePullPolicy: Never
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: imagen-service
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-07-03T02:44:28Z"
      lastUpdateTime: "2025-07-03T02:44:28Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-07-03T04:08:33Z"
      lastUpdateTime: "2025-07-03T04:08:33Z"
      message: ReplicaSet "imagen-service-84c6cb848b" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 6
    replicas: 3
    unavailableReplicas: 3
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"gateway"},"name":"gateway","namespace":"microservicios-web-imagenes"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"gateway"}},"template":{"metadata":{"labels":{"app":"gateway"}},"spec":{"containers":[{"env":[{"name":"ASPNETCORE_URLS","value":"http://+:8080"}],"image":"gateway:latest","imagePullPolicy":"Never","livenessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":15,"periodSeconds":20},"name":"gateway","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":5,"periodSeconds":10},"volumeMounts":[{"mountPath":"/app/ocelot.json","name":"gateway-config","subPath":"ocelot.json"},{"mountPath":"/app/appsettings.json","name":"gateway-config","subPath":"appsettings.json"}]}],"volumes":[{"configMap":{"name":"gateway-config"},"name":"gateway-config"}]}}}}
    creationTimestamp: "2025-07-03T02:44:28Z"
    generation: 5
    labels:
      app: gateway
    name: gateway
    namespace: microservicios-web-imagenes
    resourceVersion: "9481"
    uid: 65e8bfc7-8474-4964-af9e-3ac10587216c
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: gateway
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-07-03T00:58:00-03:00"
        creationTimestamp: null
        labels:
          app: gateway
      spec:
        containers:
        - env:
          - name: ASPNETCORE_URLS
            value: http://+:8080
          image: gateway:dev
          imagePullPolicy: Never
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: gateway
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/ocelot.json
            name: gateway-config
            subPath: ocelot.json
          - mountPath: /app/appsettings.json
            name: gateway-config
            subPath: appsettings.json
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: gateway-config
          name: gateway-config
  status:
    conditions:
    - lastTransitionTime: "2025-07-03T02:44:28Z"
      lastUpdateTime: "2025-07-03T02:44:28Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-07-03T04:08:28Z"
      lastUpdateTime: "2025-07-03T04:08:28Z"
      message: ReplicaSet "gateway-5c7d5587ff" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 5
    replicas: 3
    unavailableReplicas: 3
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
